services:
  mongodb:
    image: mongodb/mongodb-atlas-local:8.0
    container_name: mongodb
    hostname: mongodb
    ports:
      - "27018:27017"
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=user
      - MONGODB_INITDB_ROOT_PASSWORD=pass
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  vector-embed:
    build: ./vector-embed
    container_name: vector-embed
    ports:
      - "8000:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./vector-embed:/app  # Mount local code to sync changes in development
    environment:
      - PYTHONUNBUFFERED=1
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    command: ["uvicorn", "vector-service:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]  # Enable auto-reloading during development

  scraper:
    build: ./scraper
    container_name: scraper
    depends_on:
      mongodb:
        condition: service_healthy
      vector-embed:
        condition: service_healthy
    volumes:
      - ./scraper:/app
    environment:
      - PYTHONUNBUFFERED=1
    command: ["watchmedo", "auto-restart", "--patterns=*.py", "--", "python", "scraper.py"]  # Watch for Python file changes and restart script

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11435:11434"
    deploy:
      resources:
        reservations:
          devices:
          - driver: nvidia
            capabilities: ["gpu"]
            count: all  # Adjust count for the number of GPUs you want to use
    volumes:
      - ollama:/root/.ollama
    restart: always    

  chat:
    build:
      context: ./chat
      dockerfile: Dockerfile
    container_name: chat
    command: npm run dev
    environment:
      - MONGO_URI=mongodb://user:pass@mongodb:27018/?directConnection=true
      - WATCHPACK_POLLING=1
    depends_on:
      mongodb:
        condition: service_healthy
      vector-embed:
        condition: service_healthy    
    volumes:
      - ./chat:/usr/app
      - /usr/app/node_modules
    restart: unless-stopped
    ports:
      - "3000:3000"

volumes:
  mongo_data:
  mongo_config:
  ollama:
